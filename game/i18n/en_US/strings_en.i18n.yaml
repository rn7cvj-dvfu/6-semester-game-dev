settings:
  options: Sound
  change_lang: Change language
  change_theme: Change theme
  title: Settings

statistics:
  title: Statistics
  totalPlayTime: Total Play Time
  sessionCount: Sessions
  reset: Reset statistics
  totalLevelsCompleted: Levels Completed
  levelsTitle: Level Performance
  level: "Level $levelId"
  timeSpent: "Time $time"
  avgLevelTime: Avg. Time / Level
  noData: No data available yet

useDarkTheme: Dark theme
useSeedColor: Seed color
useLangue: Language

levels:
  0:
    title: "Demo level"
    text: "This is a level you can use for testing. It has nothing to do with the game."
  1:
    name: "Basics"
    stages:
      1:
        title: "Stage 1: Vertex"
        text: "You see a single dot. This is a basic element. In graphs, such dots are called vertices."
      2:
        title: "Stage 2: Edge"
        text: "Now, two vertices are connected by a line. This line is called an edge. An edge links two vertices together."
      3:
        title: "Stage 3: Graph"
        text: "When multiple vertices are connected by edges, they form a graph — a structure that represents relationships between elements."

  2:
    name: "Connectivity components"
    stages:
      1:
        title: "Stage 1: Connected graph"
        text: "This graph is connected. It means you can reach any vertex from any other by following the edges."
        richText(rich): "This graph is connected. It means you can reach any vertex from any other by following the edges. For example, you can reach the ${redNode(red)} vertex from the ${blueNode(blue)} vertex, and from the ${blueNode(blue)} to the ${greenNode(green)}."
      2:
        title: "Stage 2: Disconnected graph"
        text: "This graph is not connected. It consists of two separate parts, called connected components. You cannot move from one part to another."
        richText(rich): "This graph is not connected. It consists of two separate parts, called connected components. You cannot move from one part to another. For example, you cannot reach the ${redNode(red)} vertex from the ${blueNode(blue)}."
      3:
        title: "Stage 3: Connected components"
        text: "Here are three connected components. Each component is a maximal connected subgraph. Inside each component, all vertices are connected, but there are no connections between different components."
      4:
        title: "Stage 4: How many connected components?"
        text: "Here is a graph with several connected components. How many are there?"
  3:
    name: "Connect the graph"
    taskNotCompleted: "Task not completed"
    returnButton: "Return"
    connectThemAllTitle: "Connect them all!"
    connectThemAllDescription: "The current graph consists of several separate parts. Make the graph connected by connecting nodes with the mouse."
    resetButton: "Reset"
    checkButton: "Check"

  4:
    name: "Path"
    stages:
      1:
        title: "Stage 1: The Path"
        richText(rich): "A path is a sequence of vertices where each pair of neighboring vertices is connected by an edge. For example, in this graph, there is a path from the ${redNode(red)} vertex to the ${blue(blue)} vertex."
      2:
        title: "Stage 2: Path Length"
        richText(rich): "The length of a path is the number of edges in that path. For example, the length of the path from the ${redNode(red)} vertex to the ${blueNode(blue)} vertex is 2, since there are two edges between them."
      3:
        title: "Stage 3: What’s the Length?"
        richText(rich): "What is the length of the path from the ${redNode(red)} vertex to the ${blueNode(blue)} vertex?"
  5:
    name: "Find the Path"
    stages:
      1:
        title: "Find the Path"
        richText(rich): "There is a path in this graph from the ${redNode(red)} node to the ${blueNode(blue)} node. Find it.\nHint: you are currently at the ${redNode2(red)} node, and the ${orangeNode(orange)} nodes show where you can move next."
  6:
    name: "Breadth-first search"
    stages:
      1:
        title: "Breadth-First Search (BFS) Tree Traversal"
        richText(rich): |
          This animation demonstrates the order in which nodes are visited during a BFS traversal of a tree.
          The current node being visited will be highlighted in ${greenNode(green)}.
          ${orangeNode(Orange)} will highlight the nodes that have been added to the queue for visiting.

noNodesToEdit: "Graph has no nodes to edit."
addNode: "Add Node"
removeLastNode: "Remove Node"

enterNumberOfConnectivityComponents: Enter the number of connected components
enterPathLength: "Enter the length of the path"
enterNumber: "Enter a number"
wrongAnswer: "Wrong answer :("
common:
  back: Back
  next: Next
  finish: Finish
  levelComplete: "Level Complete!"
  nextLevelPrompt: "Choose your fate"
  toMainMenu: "Main Menu"
  nextLevel: "Next Level"
  playAnimation: "Play Animation"
  stopAnimation: "Stop Animation"
